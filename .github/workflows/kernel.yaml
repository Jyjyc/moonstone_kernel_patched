name: Build Android Kernel (moonstone)

on:
  workflow_dispatch:
  push:
#    branches: [ main, dev, ci/* ]
    branches: [ SukiSU-susfs-test ]

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install deps
      run: |
        sudo apt update
        sudo apt install -y bc bison flex libssl-dev build-essential \
        ccache libncurses5-dev libncursesw5-dev python3 zstd repo git \
        git-lfs clang-tools llvm lld device-tree-compiler lz4 xz-utils \
        zlib1g-dev python-is-python3 p7zip-full android-sdk-libsparse-utils \
        erofs-utils default-jdk gnupg gperf zip curl libncurses-dev libx11-dev \
        libreadline-dev libgl1 libgl1-mesa-dev make sudo bc grep tofrodos \
        python3-markdown libxml2-utils xsltproc libc6-dev libtinfo6 cpio kmod \
        openssl libelf-dev pahole libarchive-tools rsync ssh \
        --fix-missing

    - name: Patch
      run: |
        bash setup.sh susfs-main
        KERNEL_ROOT=$(pwd)
        echo "KERNEL_ROOT: $KERNEL_ROOT"
        MYDIR="$KERNEL_ROOT/tmp_dwl"
        mkdir $MYDIR
        cd $MYDIR
        git clone --branch kernel-5.4 --single-branch https://gitlab.com/simonpunk/susfs4ksu.git susfs
        cd susfs
        cp ./kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch $KERNEL_ROOT/KernelSU/
        cp ./kernel_patches/50_add_susfs_in_kernel-5.4.patch $KERNEL_ROOT/common/
        cp ./kernel_patches/fs/* $KERNEL_ROOT/fs/
        cp ./kernel_patches/include/linux/* $KERNEL_ROOT/include/linux/
        cd $KERNEL_ROOT/KernelSU
        patch -p1 < 10_enable_susfs_for_ksu.patch
        cd $KERNEL_ROOT/common
        patch -p1 < 50_add_susfs_in_kernel.patch
        cd $KERNEL_ROOT

    - name: Configure env
      run: |
        echo "ARCH=arm64" >> $GITHUB_ENV
        echo "SUBARCH=arm64" >> $GITHUB_ENV
        echo "CROSS_COMPILE=aarch64-none-linux-gnu-" >> $GITHUB_ENV
        echo "CLANG_TRIPLE=aarch64-linux-gnu-" >> $GITHUB_ENV
        echo "CC=clang" >> $GITHUB_ENV
        echo "CFLAGS=\"-O2 -flto=thin\"" >> $GITHUB_ENV
        echo "CXXFLAGS=\"-O2 -flto=thin\"" >> $GITHUB_ENV
        echo "LDFLAGS=\"-flto=thin -fuse-ld=lld\"" >> $GITHUB_ENV
        echo "LLVM=1" >> $GITHUB_ENV
        echo "LLVM_IAS=1" >> $GITHUB_ENV
#        echo "KBUILD_BUILD_USER=github" >> $GITHUB_ENV
#        echo "KBUILD_BUILD_HOST=actions" >> $GITHUB_ENV

    - name: Defconfig
      run: |
        make -j$(nproc) O=out stone_defconfig

    # - name: Apply local config tweaks (optional)
      # run: |
        # ./scripts/config --file out/.config \
          # --enable CONFIG_KALLSYMS \
          # --enable CONFIG_KALLSYMS_ALL \
          # --enable CONFIG_KPROBES \
          # --enable CONFIG_KRETPROBES
        # make -j$(nproc) O=out olddefconfig

    - name: Build kernel
      run: |
        make -j$(nproc) O=out

    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: kernel-out
        path: |
          out/arch/arm64/boot/Image*
          out/arch/arm64/boot/dts/**/*.dtb
          out/arch/arm64/boot/dtbo.img
