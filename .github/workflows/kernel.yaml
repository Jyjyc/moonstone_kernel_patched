name: Build Android Kernel (moonstone)

on:
  workflow_dispatch:
  push:
    branches: [ sukisu-test-2 ]

jobs:
  build:
    runs-on: ubuntu-24.04

#    steps:
#    - name: Maximize Build Space
#      uses: AdityaGarg8/remove-unwanted-software@v5
#      with:
#        remove-dotnet: 'true'          # Frees ~2 GB
#        remove-android: 'true'         # Frees ~9 GB
#        remove-haskell: 'true'         # Frees ~5.2 GB
#        remove-codeql: 'true'          # Frees ~5.4 GB
#        remove-docker-images: 'true'   # Frees ~3.2 GB
#        remove-large-packages: 'true'  # Frees ~3.1 GB
#        remove-swapfile: 'true'        # Frees ~4 GB
#        remove-cached-tools: 'false'   # Avoid unless confirmed safe
#        verbose: 'true'                # Enable detailed logging

    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install deps
      run: |
        sudo apt update && sudo apt upgrade -y
        sudo apt purge firefox -y 
        sudo apt install -y bc bison flex libssl-dev build-essential \
        ccache libncurses5-dev libncursesw5-dev python3 zstd repo git \
        git-lfs clang-tools llvm lld device-tree-compiler lz4 xz-utils \
        zlib1g-dev python-is-python3 p7zip-full android-sdk-libsparse-utils \
        erofs-utils default-jdk gnupg gperf zip curl libncurses-dev libx11-dev \
        libreadline-dev libgl1 libgl1-mesa-dev make sudo bc grep tofrodos \
        python3-markdown libxml2-utils xsltproc libc6-dev libtinfo6 cpio kmod \
        openssl libelf-dev pahole libarchive-tools rsync ssh git-core \
        x11proto-core-dev unzip fontconfig \
        --fix-missing


#    - name: ccache
#      run: |
#        mkdir -p ~/.cache/github_ci
#        ccache --version
#        ccache --max-size=2G
#        ccache --set-config=compression=true
#        echo "CCACHE_DIR=$HOME/.ccache" >> $GITHUB_

#    - name: ccache
#      uses: actions/cache@v4
#      with:
#        path: ~/.ccache
#        key: mykernel-ccache-${{ github.sha }}
#        restore-keys: |
#          mykernel-cca

    - name: Patch
      continue-on-error: true
      run: |
        KERNEL_REPO=$(pwd)
        echo "KERNEL_REPO: $KERNEL_REPO"
        curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-main
        git clone --branch kernel-5.4 --single-branch https://gitlab.com/simonpunk/susfs4ksu.git susfs
        cd susfs
        cp ./kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch $KERNEL_REPO/KernelSU/
        cp ./kernel_patches/50_add_susfs_in_kernel-5.4.patch $KERNEL_REPO/
        cp ./kernel_patches/fs/* $KERNEL_REPO/fs/
        cp ./kernel_patches/include/linux/* $KERNEL_REPO/include/linux/
        #cd $KERNEL_REPO/KernelSU
        #patch -p1 < 10_enable_susfs_for_ksu.patch
        #cd $KERNEL_REPO
        #patch -p1 < 50_add_susfs_in_kernel.patch

    - name: Configure env
      run: |
        echo "ARCH=arm64" >> $GITHUB_ENV
        echo "SUBARCH=arm64" >> $GITHUB_ENV
        echo "CROSS_COMPILE=aarch64-none-linux-gnu-" >> $GITHUB_ENV
        echo "CLANG_TRIPLE=aarch64-linux-gnu-" >> $GITHUB_ENV
        echo "CC=clang" >> $GITHUB_ENV
        echo "CFLAGS=\"-O2 -flto=thin\"" >> $GITHUB_ENV
        echo "CXXFLAGS=\"-O2 -flto=thin\"" >> $GITHUB_ENV
        echo "LDFLAGS=\"-flto=thin -fuse-ld=lld\"" >> $GITHUB_ENV
        echo "LTO=thin" >> $GITHUB_ENV
        echo "LLVM=1" >> $GITHUB_ENV
        echo "LLVM_IAS=1" >> $GITHUB_ENV
#        echo "KBUILD_BUILD_USER=github" >> $GITHUB_ENV
#        echo "KBUILD_BUILD_HOST=actions" >> $GITHUB_ENV

    - name: Defconfig
      run: |
        make -j$(nproc) O=out stone_defconfig

    - name: Apply local config tweaks (optional)
      run: |
        ./scripts/config --file out/.config \
          --enable CONFIG_SUSFS4KSU
          #--enable CONFIG_KALLSYMS_ALL \
          #--enable CONFIG_KPROBES \
          #--enable CONFIG_KRETPROBES
        make -j$(nproc) O=out olddefconfig
  
    - name: Collect .rej files
      if: always()
      continue-on-error: true
      run: |
        mkdir -p rejects
        find . -name "*.rej" | zip -@ rejects/rejects.zip

    - name: Upload patch rejects
      if: always()   # still upload even if build failed
      continue-on-error: true
      uses: actions/upload-artifact@v4
      with:
        name: patch-rejects
        path: rejects/

    - name: Abort before build
      if: ${{ failure() }}
      run: |
        exit 1

    - name: Build kernel
      run: |
        make -j$(nproc) O=out

    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: kernel-out
        path: |
          out/arch/arm64/boot/Image*
          out/arch/arm64/boot/dts/**/*.dtb
          out/arch/arm64/boot/dtbo.img
